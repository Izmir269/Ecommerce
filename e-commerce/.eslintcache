[{"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\index.js":"1","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Products\\Products.jsx":"2","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Products\\Product\\Product.jsx":"3","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Products\\Product\\styles.js":"4","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\App.jsx":"5","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Navbar\\styles.js":"7","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\index.js":"8","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Products\\styles.js":"9","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\lib\\commerce.js":"10","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Cart\\styles.js":"12","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Cart\\CartItem\\style.js":"14","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\CustomTextFied.jsx":"19","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":158,"mtime":1608146215708,"results":"21","hashOfConfig":"22"},{"size":702,"mtime":1608230884052,"results":"23","hashOfConfig":"22"},{"size":1372,"mtime":1608231010061,"results":"24","hashOfConfig":"22"},{"size":431,"mtime":1608148639140,"results":"25","hashOfConfig":"22"},{"size":3536,"mtime":1609194718900,"results":"26","hashOfConfig":"22"},{"size":1511,"mtime":1608323589900,"results":"27","hashOfConfig":"22"},{"size":1631,"mtime":1608162273345,"results":"28","hashOfConfig":"22"},{"size":225,"mtime":1608407438415,"results":"29","hashOfConfig":"22"},{"size":298,"mtime":1608163129618,"results":"30","hashOfConfig":"22"},{"size":127,"mtime":1608164728342,"results":"31","hashOfConfig":"22"},{"size":2223,"mtime":1608406447162,"results":"32","hashOfConfig":"22"},{"size":597,"mtime":1608231749134,"results":"33","hashOfConfig":"22"},{"size":1356,"mtime":1608384773006,"results":"34","hashOfConfig":"22"},{"size":349,"mtime":1608303082374,"results":"35","hashOfConfig":"22"},{"size":4239,"mtime":1609197263403,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1608406999059,"results":"37","hashOfConfig":"22"},{"size":5667,"mtime":1609191032721,"results":"38","hashOfConfig":"22"},{"size":2466,"mtime":1609253815187,"results":"39","hashOfConfig":"22"},{"size":588,"mtime":1609195879191,"results":"40","hashOfConfig":"22"},{"size":1068,"mtime":1609192139312,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6r6iro",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\index.js",[],["87","88"],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\App.jsx",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Navbar\\Navbar.jsx",["89","90"],"import React from 'react';\r\nimport {AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography} from '@material-ui/core';\r\nimport {ShoppingCart} from '@material-ui/icons';\r\nimport {Link, useLocation} from 'react-router-dom';\r\n\r\nimport logo from '../../asserts/commercejs.png';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = ({totalItems}) => {\r\n\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image}/>\r\n                        Commerce.js\r\n                    </Typography>\r\n                    <div className={classes.grow}/>\r\n\r\n                    {location.pathname === '/'  && (\r\n                        <div className={classes.button}>\r\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\r\n                            <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div>\r\n                    )} \r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\index.js",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Products\\styles.js",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\lib\\commerce.js",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Cart\\Cart.jsx",["91"],"import React from 'react';\r\nimport {Container, Typography, Button, Grid, Toolbar} from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport CartItem from '../Cart/CartItem/CartItem'; \r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Cart = ({cart, onUpdateCartQty, onRemoveFromCart, onEmptyCart}) => {\r\n    const classes = useStyles();\r\n    \r\n\r\n    //Simple fonctions renvoyant du JSX\r\n    const EmptyCart = () => (\r\n        <Typography variant=\"subtitle1\">\r\n            Tu n'as pas d'articles dans le panier, commence Ã  en ajouter, <Link to=\"/\" className={classes.link}>Ajouter au panier</Link>\r\n            </Typography>\r\n    );\r\n    const FiledCart = () => (\r\n        //empty fragment\r\n        <>\r\n            <Grid container spacing={3}>\r\n                {cart.line_items.map((item) => (\r\n                    <Grid item xs={12} sm={4} key={item.id}>\r\n                        <CartItem item={item} onUpdateCartQty= {onUpdateCartQty} onRemoveFromCart = {onRemoveFromCart}/>\r\n                        \r\n                    </Grid>\r\n                ))}\r\n\r\n            </Grid>\r\n            <div className={classes.cardDetails}>\r\n                <Typography variant=\"h4\"> Subtotal: {cart.subtotal.formatted_with_symbol}</Typography>\r\n                <div>\r\n                    <Button className={classes.emptyButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"secondary\" onClick={onEmptyCart}>Empty Cart</Button>\r\n                    <Button component={Link} to=\"/checkout\" className={classes.checkoutButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"primary\">Checkout</Button>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n    if(!cart.line_items) return 'Loading...';\r\n    return (\r\n        <Container>\r\n            <div className={classes.toolbar}/>\r\n            <Typography className= {classes.title} variant=\"h3\" gutterBottom>Le contenu du panier</Typography>\r\n            {\r\n                /**\r\n                 * On va rendre un composant diffÃ©rent en fonction de si le panier est vide ou pas\r\n                 */\r\n            }\r\n            {!cart.line_items.length ? <EmptyCart /> : <FiledCart />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Cart\\styles.js",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\Cart\\CartItem\\style.js",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["92"],"import React, {useState, useEffect} from 'react';\r\nimport {Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, cssBaseline} from '@material-ui/core';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {commerce} from '../../../lib/commerce';\r\nimport useStyle from './styles';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\n\r\nconst steps=['Renseignez votre adresse', 'DÃ©tails de payement'];\r\n\r\nconst Checkout = ({cart, order, onCaptureCheckOut, error}) => {\r\n    const classes = useStyle();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setcheckoutToken] = useState(null);\r\n    const [shippingData, setshippingData] = useState({});\r\n    const [isFinished, setIsFinished] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n                    setcheckoutToken(token);\r\n            } catch (error) {\r\n                //console.log(error);\r\n                history.pushState('/'); //retour Ã  la page d'accueil\r\n            }\r\n        }\r\n\r\n        generateToken();\r\n    },[cart]);\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n\r\n    //avoir les donnÃ©es des inputs dans la partie payement\r\n    const next = (data) => {\r\n        setshippingData(data);\r\n        nextStep();\r\n    }\r\n    //timeout lors du payment. \r\n    const timeout=() => {\r\n        setTimeout(() => {\r\n            setIsFinished(true);\r\n        }, 3000);\r\n    }\r\n    //confirmation aprÃ¨s payement\r\n    let Confirmation = () => order.customer ? (\r\n        <>\r\n          <div>\r\n            <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\r\n            <Divider className={classes.divider} />\r\n            <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n          </div>\r\n          <br />\r\n          <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n        </>\r\n      ) : isFinished ? (\r\n        <>\r\n          <div>\r\n            <Typography variant=\"h5\">Thank you for your purchase!</Typography>\r\n            <Divider className={classes.divider} />\r\n          </div>\r\n          <br />\r\n          <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n        </>\r\n      ) : (\r\n        <div className={classes.spinner}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n      \r\n\r\n      if (error) {\r\n        Confirmation = () => (\r\n          <>\r\n            <Typography variant=\"h5\">Error: {error}</Typography>\r\n            <br />\r\n            <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n          </>\r\n        );\r\n      }\r\n        \r\n\r\n    const Form = () => (\r\n        activeStep === 0 ? <AddressForm checkoutToken= {checkoutToken} next={next}/> : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} onCaptureCheckOut={onCaptureCheckOut} timeout={timeout} />\r\n    )\r\n    \r\n\r\n    return (\r\n        <>\r\n        <cssBaseline />\r\n        <div className={classes.toolbar}/>\r\n        <main className= {classes.layout}>\r\n            <Paper className= {classes.paper}>\r\n                <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                <Stepper activeStep={activeStep} className= {classes.stepper}>\r\n                    {\r\n                        steps.map((step) => (\r\n                            <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))\r\n                    }\r\n\r\n                </Stepper>\r\n                {\r\n                    activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />\r\n                }\r\n\r\n            </Paper>\r\n\r\n        </main>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["93","94","95"],"import React, {useState, useEffect} from 'react';\r\nimport {InputLabel, Select, MenuItem, Button, Grid, Typography} from '@material-ui/core';\r\nimport { useForm, FormProvider} from 'react-hook-form';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {commerce} from '../../lib/commerce';\r\n\r\nimport FormInput from './CustomTextFied';\r\n\r\nconst Address = ({checkoutToken, next}) => {\r\n    /*\r\n    On va utiliser React hook form au lieu de Redux Form parcequ'il y'a beaucoup moins de renders\r\n    dans les useSate on va gÃ©rer les select parce que le choix du pays entraine une liste diffÃ©rente\r\n    de regions Ã  afficher, puis le choix de la sous-zone entraine des options diffÃ©rents\r\n    on va avoir en state Ã  chaque fois la liste total puis dans un autre state le choix fait\r\n    */\r\n   const [shippingCountries, setshippingCountries] = useState([]);\r\n   const [shippingCountry, setshippingCountry] = useState('');\r\n   const [shippingSubdivisions, setshippingSubdivisions] = useState([]);\r\n   const [shippingSubdivision, setshippingSubdivision] = useState('');\r\n   const [shippingOptions, setshippingOptions] = useState([]);\r\n   const [shippingOption, setshippingOption] = useState('');\r\n   const methods = useForm();\r\n\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n        setshippingCountries(countries);\r\n        setshippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetchSubDivisions = async (countryCode) => {\r\n        const {subdivisions} = await commerce.services.localeListSubdivisions(countryCode);\r\n        console.log(subdivisions);\r\n        setshippingSubdivisions(subdivisions);\r\n        setshippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {country, region});\r\n        setshippingOptions(options);\r\n        setshippingOption(options[0].id);\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n      fetchShippingCountries(checkoutToken.id);\r\n    }, []);\r\n    //Ce useEffet est dÃ©pendant du fait qu'il y'est un pays selectionnÃ©\r\n    useEffect(() => {\r\n       if(shippingCountry) fetchSubDivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n      if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision])\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n            <FormProvider {...methods}> \r\n            {/* spread the method for a dynamic purpose. Appartient Ã  react-hook-form. data va contenir les infos des diffÃ©rents input. Dans next on spred les data qui vient des inputs auxquels on rajoute les valeurs des diffÃ©rents select */}\r\n                <form onSubmit={methods.handleSubmit((data) => next({...data, shippingCountry, shippingSubdivision, shippingSubdivision}))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput  name='firstName' label='FirstName'/>\r\n                        <FormInput  name='lastName' label='lastName'/>\r\n                        <FormInput  name='address1' label='Address'/>\r\n                        <FormInput  name='email' label='Email'/>\r\n                        <FormInput  name='city' label='City'/>\r\n                        <FormInput  name='zip' label='ZIP/Code postal'/>\r\n\r\n\r\n\r\n                 \r\n\r\n\r\n\r\n\r\n                 <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setshippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setshippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setshippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n                    </Grid>\r\n                    <br></br>\r\n\r\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Retour au panier</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Suivant</Button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Address\r\n","C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\CustomTextFied.jsx",[],"C:\\Users\\izmirchaharoumane.zo\\Desktop\\ecommerce\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":45,"nodeType":"102","messageId":"103","endLine":2,"endColumn":53},{"ruleId":"100","severity":1,"message":"104","line":2,"column":55,"nodeType":"102","messageId":"103","endLine":2,"endColumn":59},{"ruleId":"100","severity":1,"message":"105","line":2,"column":46,"nodeType":"102","messageId":"103","endLine":2,"endColumn":53},{"ruleId":"106","severity":1,"message":"107","line":31,"column":7,"nodeType":"108","endLine":31,"endColumn":13,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":48,"column":8,"nodeType":"108","endLine":48,"endColumn":10,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"112","line":56,"column":8,"nodeType":"108","endLine":56,"endColumn":29,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":63,"column":117,"nodeType":"116","messageId":"117","endLine":63,"endColumn":136},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'Toolbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["122"],"no-dupe-keys","Duplicate key 'shippingSubdivision'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [cart, history]",{"range":"129","text":"130"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"131","text":"132"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"133","text":"134"},[1269,1275],"[cart, history]",[2165,2167],"[checkoutToken.id]",[2500,2521],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]